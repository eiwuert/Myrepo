<?php

	// This file has been automatically generated by DataGrabber(tm)
	require_once('mysql.3.php');
	require_once('debug.1.php');
	require_once('error.2.php');
	require_once('csv.1.php');
	require_once('ftp.2.php');

	$SQL=new MySQL_3();
	$cx=$SQL->connect("both","selsds001","sellingsource","%selling\$_db",Debug_1::Trace_Code(__FILE__,__LINE__));
	Error_2::Error_Test($cx,TRUE);
	$total_records=0;
	$total_bad=0;
	$bad_funded=0;
	$bad_unique=0;
	$bad_scrubbed=0;
	
	$start = date("Ymd000000", strtotime("-1 day"));
	$end = date("Ymd235959", strtotime("-1 day"));
	
	$SQL->query("lead_generation", "TRUNCATE TmpTable0426", Debug_1::Trace_Code(__FILE__,__LINE__));
		
	$_TmpTable0426 = $SQL->query("lead_generation","
	CREATE TABLE `TmpTable0426` (
	`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
	`modified` timestamp(14) NOT NULL,
	`first_name` varchar(50) NOT NULL DEFAULT '',
	`last_name` varchar(50) NOT NULL DEFAULT '',
	`email` varchar(50) NOT NULL DEFAULT '',
	`home_phone` varchar(20) NOT NULL DEFAULT '',
	`work_phone` varchar(20) NOT NULL DEFAULT '',
	`cell_phone` varchar(20) NOT NULL DEFAULT '',
	`ssn` varchar(15) NOT NULL DEFAULT '',
	`driver_license` varchar(100) NOT NULL DEFAULT '',
	`address_1` varchar(100) NOT NULL DEFAULT '',
	`city` varchar(100) NOT NULL DEFAULT '',
	`state` char(2),
	`zip` varchar(20) NOT NULL DEFAULT '',
	`bank_name` varchar(100) NOT NULL DEFAULT '',
	`bank_account_number` varchar(100) NOT NULL DEFAULT '',
	`bank_routing_number` varchar(100) NOT NULL DEFAULT '',
	`employer_name` varchar(100) NOT NULL DEFAULT '',
	`income_monthly_net` mediumint(9) unsigned,
	`ip_address` varchar(20) NOT NULL DEFAULT '',
	PRIMARY KEY(`id`)
	) TYPE=MyISAM;
	", Debug_1::Trace_Code(__FILE__,__LINE__));
	
	$Result_olp_bb_visitor=$SQL->query("olp_bb_visitor","SELECT
		personal.first_name AS first_name,
		personal.last_name AS last_name,
		personal.email AS email,
		personal.home_phone AS home_phone,
		employment.work_phone AS work_phone,
		personal.cell_phone AS cell_phone,
		personal.social_security_number AS ssn,
		personal.drivers_license_number AS driver_license,
		residence.address_1 AS address_1,
		residence.city AS city,
		residence.state AS state,
		residence.zip AS zip,
		bank_info.bank_name AS bank_name,
		bank_info.account_number AS bank_account_number,
		bank_info.routing_number AS bank_routing_number,
		employment.employer AS employer_name,
		income.net_pay AS income_monthly_net,
		campaign_info.ip_address
		FROM application
		JOIN personal ON (application.application_id=personal.application_id)
		JOIN employment ON (application.application_id=employment.application_id)
		JOIN residence ON (application.application_id=residence.application_id)
		JOIN bank_info ON (application.application_id=bank_info.application_id)
		JOIN income ON (application.application_id=income.application_id)
		JOIN blackbox_state ON (application.application_id=blackbox_state.application_id)
		JOIN campaign_info ON (application.application_id=campaign_info.application_id)
		WHERE
		application.created_date BETWEEN '$start' AND '$end'
		AND blackbox_state.bb_fb IS NOT NULL
		AND personal.first_name!=''
		AND personal.first_name NOT LIKE '%TEST'
		AND personal.first_name NOT LIKE 'TEST%'
		AND personal.first_name NOT LIKE '%SHIT%'
		AND personal.first_name NOT LIKE '%SPAM%'
		AND personal.first_name NOT LIKE '%FUCK%'
		AND personal.first_name NOT LIKE '%BITCH%'
		AND personal.last_name!=''
		AND personal.last_name NOT LIKE '%TEST'
		AND personal.last_name NOT LIKE 'TEST%'
		AND personal.last_name NOT LIKE '%SHIT%'
		AND personal.last_name NOT LIKE '%SPAM%'
		AND personal.last_name NOT LIKE '%FUCK%'
		AND personal.last_name NOT LIKE '%BITCH%'
		AND personal.home_phone!=''
		AND employment.work_phone!=''
		AND personal.social_security_number!=''
		AND personal.drivers_license_number!=''
		AND residence.address_1!=''
		AND residence.city!=''
		AND residence.state!=''
		AND residence.zip!=''
		AND bank_info.bank_name!=''
		AND bank_info.account_number!=''
		AND bank_info.routing_number!=''
		AND employment.employer!=''
		AND income.net_pay!=''",Debug_1::Trace_Code(__FILE__,__LINE__));
	Error_2::Error_Test($Result_olp_bb_visitor,TRUE);
	print "\nolp_bb_visitor count - ". 
	$SQL->Row_Count($Result_olp_bb_visitor);
	$total_records+=$SQL->Row_Count($Result_olp_bb_visitor);
	while($object=$SQL->Fetch_Object_Row($Result_olp_bb_visitor))
	{
		$object_collection[] = $object;
	}
	foreach($object_collection as $k=>$object_row){
		$ires=$SQL->query("lead_generation","INSERT IGNORE INTO TmpTable0426 
		SET first_name='".mysql_escape_string($object_row->first_name)."',
		last_name='".mysql_escape_string($object_row->last_name)."',
		email='".mysql_escape_string($object_row->email)."',
		home_phone='".mysql_escape_string($object_row->home_phone)."',
		work_phone='".mysql_escape_string($object_row->work_phone)."',
		cell_phone='".mysql_escape_string($object_row->cell_phone)."',
		ssn='".mysql_escape_string($object_row->ssn)."',
		driver_license='".mysql_escape_string($object_row->driver_license)."',
		address_1='".mysql_escape_string($object_row->address_1)."',
		city='".mysql_escape_string($object_row->city)."',
		state='".mysql_escape_string($object_row->state)."',
		zip='".mysql_escape_string($object_row->zip)."',
		bank_name='".mysql_escape_string($object_row->bank_name)."',
		bank_account_number='".mysql_escape_string($object_row->bank_account_number)."',
		bank_routing_number='".mysql_escape_string($object_row->bank_routing_number)."',
		employer_name='".mysql_escape_string($object_row->employer_name)."',
		income_monthly_net='".mysql_escape_string($object_row->income_monthly_net)."',
		ip_address='".mysql_escape_string($object_row->ip_address)."'",Debug_1::Trace_Code(__FILE__,__LINE__));
		if($SQL->Affected_Row_Count($ires)==0)
		{
			unset($object_collection[$k]);
			print "\nRemoved: Not Unique: {$object_row->email}";
			$bad_unique++;
		}
	}
	
				
	$total_bad=$bad_funded+$bad_unique+$bad_scrubbed;
	$results="

Removed (funded): $bad_funded
Removed (scrubbed): $bad_scrubbed
Removed (duplicate): $bad_unique
Total Removed: $total_bad 
Total Records: $total_records good records - $total_bad bad records = ".($total_records-$total_bad)." usable records";print"\n\n";
	print $results;
	print "\n\nFinalizing...";
	
	$usable_count = $total_records-$total_bad;

	
	$headers = array("FIRST_NAME","LAST_NAME","EMAIL","HOME_PHONE","WORK_PHONE","CELL_PHONE","SSN","DRIVER_LICENSE","ADDRESS_1", "CITY", "STATE", "ZIP", "BANK_NAME","BANK_ACCOUNT_NUMBER","BANK_ROUTING_NUMBER","EMPLOYER_NAME","INCOME_MONTHLY_NET","IP_ADDRESS");
	print "\n\nGenerating CSV File '/tmp/leadgen_datagrabber_0426.csv'....

";
	$fp_csv = fopen("/tmp/leadgen_datagrabber_0426.csv","w");
	$csv = new CSV(
		array(
			"forcequotes" => TRUE,
			"header" => $headers,
			"autoflush" => FALSE,			
			"stream" => $fp_csv,			
		)
	);
	
	foreach($object_collection as $row)
	{
		$csv->recordFromArray((array)$row);
	}		
	
	$buf=$csv->_buf;
	
	$csv->flush();
	fclose($fp_csv);
	
	print "Done.";
						
					
							
			$email_port = 25;
			$email_url = "sellingsource.com";
			$email_s_name = "DataGrubber";
			$email_s_address = "data-grubber-noreply@thesellingsource.com";
			
			// Build Email Header
			$header = new StdClass ();
			$header->smtp_server = $email_smtp_server;
			$header->port = $email_port;
			$header->url = $email_url;
			$header->subject = "Fastbucks Nightly Leads";
			$header->sender_name = $email_s_name;
			$header->sender_address = $email_s_address;
		
					$message = new StdClass ();
					$message->text = "There are $usable_count records attached.  This is an automatic email generated by TSSDataGrubber; do not reply.  If you have any questions, please contact john.hargrove@thesellingsource.com. Thank you.";
					
					
				$attachment_csv = new StdClass ();
				$attachment_csv->name = "nighty_fb_{$start}_{$end}.csv";
				$attachment_csv->content = base64_encode($buf);
				$attachment_csv->content_type = "text/x-csv";
				$attachment_csv->content_length = strlen ($buf);
				$attachment_csv->encoded = TRUE;						
					
					
					  
					
		//email delivery
		// Create the Mail Object and Send the Mail	
		include_once("prpc/client.php");
		$mail = new prpc_client("prpc://smtp.2.soapdataserver.com/smtp.1.php");
			
		// Key Line - Create the mailing (Name of mailing, headers, scheduled date, scheduled time) DO NOT USE SCHEDULING!!!
		$mailing_id = $mail->CreateMailing ("datagrubber_run", $header, NULL, NULL);
	
		$recipients=unserialize("a:1:{i:0;O:8:\"stdClass\":3:{s:4:\"type\";s:2:\"To\";s:4:\"name\";s:16:\"cs@fastbucks.com\";s:7:\"address\";s:16:\"cs@fastbucks.com\";}}");
		
		// Key Line - Add the package to the mailing (mailing_id, array of recipients, message, array of attachments)
		$package_id = $mail->AddPackage ($mailing_id, $recipients, $message, array($attachment_csv));

		// Key Line - Tell the server to process the mailing (send all emails)
		$result = $mail->SendMail ($mailing_id);
	
		// Debug Code - Use if you want to see the soap stuff
		// print_r ($mail->__get_wire ());
		echo " ... Mailing Id: ".$mailing_id."
";
		echo " ... Result: ".$result."\n";
		echo " ... Recipients: 
";	
				
				
				
					$message = new StdClass ();
					$message->text = "
					
					DataGrubber Run #0426		
					
					$results
					
					 This is an automatic email generated by TSSDataGrubber; do not reply.  If you have any questions, please contact john.hargrove@thesellingsource.com. Thank you.
					";
					
				
					  
					
		//email delivery
		// Create the Mail Object and Send the Mail	
		include_once("prpc/client.php");
		$mail = new prpc_client("prpc://smtp.2.soapdataserver.com/smtp.1.php");
			
		// Key Line - Create the mailing (Name of mailing, headers, scheduled date, scheduled time) DO NOT USE SCHEDULING!!!
		$mailing_id = $mail->CreateMailing ("datagrubber_run", $header, NULL, NULL);
	
		$recipients=unserialize("a:2:{i:0;O:8:\"stdClass\":3:{s:4:\"type\";s:2:\"To\";s:4:\"name\";s:34:\"john.hargrove@thesellingsource.com\";s:7:\"address\";s:34:\"john.hargrove@thesellingsource.com\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:2:\"To\";s:4:\"name\";s:33:\"john.hawkins@thesellingsource.com\";s:7:\"address\";s:33:\"john.hawkins@thesellingsource.com\";}}");
		
		$r=new StdClass();
		$r->type="To";
		$r->name="Laura";
		$r->address="laura.gharst@partnerweekly.com";
		
		$recipients[] = $r;
		
		print "Poo: "; print_r($recipients);		
		// Key Line - Add the package to the mailing (mailing_id, array of recipients, message, array of attachments)
		$package_id = $mail->AddPackage ($mailing_id, $recipients, $message, NULL);

		// Key Line - Tell the server to process the mailing (send all emails)
		$result = $mail->SendMail ($mailing_id);
	
		// Debug Code - Use if you want to see the soap stuff
		// print_r ($mail->__get_wire ());
		echo " ... Report Mailing Id: ".$mailing_id."
";
		echo " ... Result: ".$result."\n";
		echo " ... Recipients: 
";	

	print "Batch Completed Successfully"

?>